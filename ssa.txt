after all ssa
===================================
fspace _c0_nop():
----------------- blc ._c0_nop(). ------------------
0 : loadfromstack {}
1 : ret
-------------- jump:ret -----------------

-----------------------------------
tuse = {

}

     ===================================


===================================
fspace _c0_raise():
----------------- blc ._c0_raise(). ------------------
0 : loadfromstack {}
1 : %t5 <-s- $1
2 : %t6 <-s- $0
3 : %t7 <-- %t5 / %t6
4 : %t8 <-s- %t7
5 : ret
-------------- jump:ret -----------------

-----------------------------------
tuse = {
%t8:
%t7:4
%t6:3
%t5:3
}

     ===================================


===================================
fspace _c0_abort():
----------------- blc ._c0_abort(). ------------------
0 : loadfromstack {}
1 : call __assert_fail
2 : ret
-------------- jump:ret -----------------

----------------- blc .L2. ------------------
3 : ret
-------------- jump:ret -----------------

-----------------------------------
tuse = {

}

     ===================================


===================================
fspace _c0_okay():
----------------- blc ._c0_okay(). ------------------
0 : loadfromstack {}
1 : ret
-------------- jump:ret -----------------

----------------- blc .L3. ------------------
2 : ret
-------------- jump:ret -----------------

-----------------------------------
tuse = {

}

     ===================================


===================================
fspace _c0_main():
----------------- blc ._c0_main(). ------------------
0 : loadfromstack {}
1 : call _c0_nop(|)[tail call - false]
2 : call _c0_okay(|)[tail call - false]
3 : EAX <-s- $128
4 : ret
-------------- jump:ret -----------------

----------------- blc .L4. ------------------
5 : ret
-------------- jump:ret -----------------

-----------------------------------
tuse = {

}

     ===================================

prop on fspace _c0_nop
prop on fspace _c0_raise
propagate 1 : %t5 <- $1
delete code: 1 : nop
propagate 2 : %t6 <- $0
delete code: 2 : nop
propagate 4 : %t8 <- %t7
delete code: 4 : nop
check if 4 is still in tuse[%t7]={}
tuse[%t7] is now 
prop on fspace _c0_abort
prop on fspace _c0_okay
prop on fspace _c0_main
===================================
fspace _c0_nop():
----------------- blc ._c0_nop(). ------------------
0 : loadfromstack {}
1 : ret
-------------- jump:ret -----------------

-----------------------------------
tuse = {

}

     ===================================


===================================
fspace _c0_raise():
----------------- blc ._c0_raise(). ------------------
0 : loadfromstack {}
1 : nop
2 : nop
3 : %t7 <-- $1 / $0
4 : nop
5 : ret
-------------- jump:ret -----------------

-----------------------------------
tuse = {
%t7:
}

     ===================================


===================================
fspace _c0_abort():
----------------- blc ._c0_abort(). ------------------
0 : loadfromstack {}
1 : call __assert_fail
2 : ret
-------------- jump:ret -----------------

----------------- blc .L2. ------------------
3 : ret
-------------- jump:ret -----------------

-----------------------------------
tuse = {

}

     ===================================


===================================
fspace _c0_okay():
----------------- blc ._c0_okay(). ------------------
0 : loadfromstack {}
1 : ret
-------------- jump:ret -----------------

----------------- blc .L3. ------------------
2 : ret
-------------- jump:ret -----------------

-----------------------------------
tuse = {

}

     ===================================


===================================
fspace _c0_main():
----------------- blc ._c0_main(). ------------------
0 : loadfromstack {}
1 : call _c0_nop(|)[tail call - false]
2 : call _c0_okay(|)[tail call - false]
3 : EAX <-s- $128
4 : ret
-------------- jump:ret -----------------

----------------- blc .L4. ------------------
5 : ret
-------------- jump:ret -----------------

-----------------------------------
tuse = {

}

     ===================================

after all de-ssa
