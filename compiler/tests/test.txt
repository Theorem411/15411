Parsing... compiler/tests/test.l2
int main() {
int res;
int shift;
WHILE (true) `Block{
 res = 0;
shift = 1;
For(int i = 0; , (i < 5) , i++) `Block{
 res += shift;
shift = -(shift);
 }`

if ((res != 0)) [
`Block{
 return res;
 }`
;]
 }`

return 0;
}
doing elaborating...


int res;
  int shift;
        while(true) {
            res = 0;
              shift = 1;
              int i;
                i = 0;
                  while((i < 5)) {
                              res = (res + shift);
                      shift = (0 - shift);
            nop;


                      i = (i + 1);
            nop;


}
          nop;



              if ((res != 0)) {
                return res;
          nop;

} else {
          nop;
}
        nop;




}
          return 0;
      nop;





doing type Checking...
Translating...
.L1
goto .L2
.L2
%t1  <--  0
%t2  <--  1
%t3  <--  0
.L4
if (%t3 < 5).L5 else .L6
.L5
%t1  <--  (%t1 + %t2)
%t2  <--  (0 - %t2)
%t3  <--  (%t3 + 1)
goto .L4
.L6
if (%t1 != 0).L7 else .L8
.L7
return %t1
goto .L9
.L8
goto .L9
.L9
goto .L1
.L3
return 0