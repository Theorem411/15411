//test div-by-zero
/* Recursive Fibonacci */

int fib (int n) {
  if (n < 0) return 1/0;	/* raise exception on illegal call */
  if (n == 0 || n == 1)
    return 1;
  else
    return fib(n-1)+fib(n-2);
}


int* init(int param) { return alloc(int); }
void prepare(int* p, int n) { *p = 0; }
int checksum(int* p) { return *p; }

int main() {
  if (!fermat(3,1,1,1)) {
    return 0;
  }
  return 15411;
  int *first = alloc(int);
  int *second = alloc(int);
  int *third = alloc(int);
  *first = fun(second, third) == 1 ? fun(second, first) * fun(third, first) 
    : fun(third, first) * fun(second, first);
  return *stuff(stuff(first, second), stuff(second, stuff(first, third)));
}
